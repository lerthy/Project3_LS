version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      # Install dependencies for web frontend
      - npm --prefix web ci || npm --prefix web install
      
      # Install dependencies for Lambda function
      - npm --prefix web/lambda ci || npm --prefix web/lambda install

  pre_build:
    commands:
      - echo "Running frontend quality checks..."
      
      # ESLint for JavaScript
      - npm --prefix web run lint:js
      
      # Stylelint for CSS
      - npm --prefix web run lint:css
      
      # ESLint for Lambda function
      - npm --prefix web/lambda run lint

  build:
    commands:
      - echo "Running tests..."
      
      # Frontend tests with coverage
      - npm --prefix web run test
      
      # Lambda tests with coverage
      - npm --prefix web/lambda run test
      
      - echo "Building static site..."
      # For this project, static files are already built
      # In a real Vite project, you'd run: npm run build

  post_build:
    commands:
      - echo "Deploying to S3 and updating Lambda..."
      
      # Get infrastructure info from SSM Parameter Store (set by Infrastructure Pipeline)
      - echo "Retrieving infrastructure configuration from SSM Parameter Store..."
      - |
        API_GATEWAY_URL=$(aws ssm get-parameter --name "/project3/api-gateway-url" --query 'Parameter.Value' --output text 2>/dev/null || echo "MISSING")
        S3_BUCKET=$(aws ssm get-parameter --name "/project3/s3-bucket" --query 'Parameter.Value' --output text 2>/dev/null || echo "MISSING")
        CLOUDFRONT_DISTRIBUTION_ID=$(aws ssm get-parameter --name "/project3/cloudfront-distribution-id" --query 'Parameter.Value' --output text 2>/dev/null || echo "MISSING")
        LAMBDA_FUNCTION_NAME=$(aws ssm get-parameter --name "/project3/lambda-function-name" --query 'Parameter.Value' --output text 2>/dev/null || echo "MISSING")
        
        # Validate that infrastructure pipeline has completed
        if [ "$API_GATEWAY_URL" = "MISSING" ] || [ "$S3_BUCKET" = "MISSING" ] || [ "$CLOUDFRONT_DISTRIBUTION_ID" = "MISSING" ] || [ "$LAMBDA_FUNCTION_NAME" = "MISSING" ]; then
          echo "ERROR: Infrastructure not deployed yet! Please run Infrastructure Pipeline first."
          echo "Missing parameters:"
          [ "$API_GATEWAY_URL" = "MISSING" ] && echo "  - API Gateway URL"
          [ "$S3_BUCKET" = "MISSING" ] && echo "  - S3 Bucket"
          [ "$CLOUDFRONT_DISTRIBUTION_ID" = "MISSING" ] && echo "  - CloudFront Distribution ID"
          [ "$LAMBDA_FUNCTION_NAME" = "MISSING" ] && echo "  - Lambda Function Name"
          exit 1
        fi
        
        echo "âœ… Infrastructure configuration retrieved successfully:"
        echo "   API Gateway URL: $API_GATEWAY_URL"
        echo "   S3 Bucket: $S3_BUCKET"
        echo "   CloudFront Distribution ID: $CLOUDFRONT_DISTRIBUTION_ID"
        echo "   Lambda Function Name: $LAMBDA_FUNCTION_NAME"
      
      # Replace API URL in config file
      - sed -i "s|{{API_GATEWAY_URL}}|$API_GATEWAY_URL|g" web/static/js/config.js
      
      # Deploy static files to S3
      - aws s3 sync web/static/ s3://$S3_BUCKET --delete
      
      # Package and deploy Lambda function (production-only dependencies)
      - cd web/lambda
      - mkdir -p deployment
      - cp index.js package.json deployment/
      - cd deployment
      - npm install --production
      - zip -r ../lambda-deployment.zip . -x "*.git*" "*.DS_Store*" "*node_modules/.cache*"
      - cd ..
      - aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --zip-file fileb://lambda-deployment.zip --region "$AWS_DEFAULT_REGION"
      - rm -rf deployment lambda-deployment.zip
      - cd ../..
      
      # Invalidate CloudFront cache
      - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
      
      - echo "Deployment completed successfully!"

artifacts:
  files:
    - 'web/coverage/**/*'
    - 'web/lambda/coverage/**/*'
  name: web-artifacts

cache:
  paths:
    - 'web/node_modules/**/*'
    - 'web/lambda/node_modules/**/*'
